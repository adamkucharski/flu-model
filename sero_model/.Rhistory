pickA=c(1:n_part)
}else{
pickA=NULL
pickA=sample(n_part, ceiling(varpart_prob0*n_part)) # check that not length zero
#age_star = age.tab #SampleAge(pickA,age.tab) #resample age (not for now)
history_star = SampleHistory(historytab,pickA,inf.n,age_star,inf_years) #resample history
theta_star =thetatab[m,]
}
dmatrix=outputdmatrix(theta_star,inf_years,linD) # Arrange parameters
# - - - - - - - - - - - - - - - -
# LIKELIHOOD function - Only calculate for updated history
lik_val=likelihoodtab[m,]
for(ii in pickA){
# Set history to zero after test date
lik.ii=rep(NA,sample.n)
for(kk in 1:sample.n){
#DEBUG DEBUG set params <<<  ii=1;kk=2;historyii=as.numeric(history_star[ii,])
lik.ii[kk]=estimatelik(ii,jj_year[kk],as.numeric(history_star[ii,]),dmatrix,theta_star,test.list,testyear_index[kk])
#if(lik.ii[kk]==-Inf){
#  print(c(ii,kk))  }
}
lik_val[ii]=sum(lik.ii)
#if(is.na(lik_val[ii])){lik_val[ii]=-Inf}
}
# - - - - - - - - - - - - - - - -
# Metropolis Hastings step
#print(c(m,sum(likelihoodtab[m,]),sum(lik_val))) # PRINT LIKELIHOOD
output_prob = ComputeProbability(sum(likelihoodtab[m,]),sum(lik_val))
if(is.na(output_prob) & m==1){stop('check initial parameter values')}
if(runif(1) < output_prob){
thetatab[m+1,] = theta_star
if(m %% switch1!=0){historytab = history_star} # Only change if resampled
#if(m %% switch1==0){age.tab = age_star} # Only change if resampled
likelihoodtab[m+1,] = lik_val
if(m %% switch1==0){accepttabT=c(accepttabT,1)}
if(m %% switch1!=0){accepttabH=c(accepttabH,1)}
}else{
thetatab[m+1,] = thetatab[m,]
likelihoodtab[m+1,] = likelihoodtab[m,]
if(m %% switch1==0){accepttabT=c(accepttabT,0)}
if(m %% switch1!=0){accepttabH=c(accepttabH,0)}
}
if(m<max(100)){
accept_rateT=0.234
accept_rateH=0.234
}else{
accept_rateT=sum(accepttabT)/length(accepttabT)
accept_rateH=sum(accepttabH)/length(accepttabH)
}
#Sys.time()-aTime  #TIMER 2
if(m %% min(runs,20) ==0){
historytabCollect=rbind(historytabCollect,historytab)
}
if(m %% min(runs,200) ==0){
print(c(m,accept_rateH,varpart_prob0,round(sum(likelihoodtab[m,]))))
save(likelihoodtab,thetatab,n_part,test.list,historytab,historytabCollect,age.tab,test.yr,file=paste("posterior_sero_runs/outputR",test.yr[1],"_",seedi,".RData",sep=""))
}
} #End runs loop
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Load data and functions (Fonville et al.)
#source("load_data.R")
source("sero_functions.R")
source("sero_funcs_steven.r")
compile.c() # Compile c code
# << Put for loop here and set loadseed=1 to run multiple MCMC chains
loadseed=1
load("R_datasets/HaNam_data.RData")
#load(paste("R_datasets/Simulated_data_",loadseed,".RData",sep=""))
# Plot simulation data vs history
#source("simulation_plots.R")
# Set initial theta
theta0=c(mu=NA,tau1=NA,tau2=NA,wane=NA,sigma=NA,muShort=NA)
theta0[["mu"]]=3
theta0[["sigma"]]=0.2
theta0[["tau1"]]=0.1
theta0[["tau2"]]=0.1
theta0[["muShort"]]=5
theta0[["wane"]]=0.5
theta=theta0
vp1=0.02 #probability individual infection history resampled - this is adaptive in model
define.year=c(2007,2008,2010,2011)
# browser()
# NEED TO RE INITIALISE DATAFRAME IF REPEAT RUN
run_mcmc(
test.yr=define.year,
test_years,
inf_years,
strain_years,
n_part,
test.list,
theta=theta0,
runs=500000,
varpart_prob=vp1,
hist.true=NULL,
switch1=10, # ratio of infection history resamples to theta resamples
seedi=loadseed,
linD=F)
define.year=c(2007)
load(paste("posterior_sero_runs/outputR",define.year[1],"_",loadseed,".RData",sep=""))
par(mfrow=c(3,3))
par(mar = c(5,5,1,1))
colA=rgb(0.8,0.8,0.8)
# Plot profile likelihood
lik.tot=rowSums(likelihoodtab)
maxlik=max(lik.tot)
runsPOST=length(lik.tot[lik.tot!=-Inf])
runs1=ceiling(0.5*runsPOST)
plot(rowSums(likelihoodtab)[runs1:runsPOST],type="l",ylab="likelihood",ylim=c(maxlik-500,maxlik))
#plot(as.data.frame(thetatab)$mu[runs1:runsPOST],type="l",ylab="mu")
plot(as.data.frame(thetatab)$sigma[runs1:runsPOST],type="l",ylab="sigma")
# Plot histogram of boosting
hist(as.data.frame(thetatab)$mu[runs1:runsPOST],main=NULL,col=colA,xlab="mu",prob=TRUE,xlim=c(0,5))
if(simDat==T){abline(v=thetaSim[["mu"]],col="red")}
hist(as.data.frame(thetatab)$sigma[runs1:runsPOST],main=NULL,col=colA,xlab="sigma",xlim=c(0,0.5))
if(simDat==T){abline(v=thetaSim[["sigma"]],col="red")}
hist(as.data.frame(thetatab)$tau1[runs1:runsPOST],main=NULL,col=colA,xlab="tau1",prob=TRUE,xlim=c(0,0.7))
if(simDat==T){abline(v=thetaSim[["tau1"]],col="red")}
hist(as.data.frame(thetatab)$tau2[runs1:runsPOST],main=NULL,col=colA,xlab="tau2",prob=TRUE,xlim=c(0,0.7))
if(simDat==T){abline(v=thetaSim[["tau2"]],col="red")}
hist(as.data.frame(thetatab)$wane[runs1:runsPOST],main=NULL,col=colA,xlab="wane",prob=TRUE,xlim=c(0,2))
if(simDat==T){abline(v=thetaSim[["wane"]],col="red")}
hist(as.data.frame(thetatab)$muShort[runs1:runsPOST],main=NULL,col=colA,xlab="mu_Short",prob=TRUE,xlim=c(0,8))
if(simDat==T){abline(v=thetaSim[["muShort"]],col="red")}
hist.sample=length(historytabCollect[,1])/n_part
ind.infN=rowSums(historytabCollect[round(0.2*hist.sample*n_part):(hist.sample*n_part),])
hist(ind.infN,breaks=seq(-0.5,max(ind.infN)+0.5,1),col=colA,xlab="infections",prob=TRUE,main=paste("mean/med=",signif(mean(ind.infN),2),"/",median(ind.infN),sep=""))
dev.copy(pdf,paste("plot_simulations/posterior",ifelse(simDat==T,paste("mu",thetaSim[["mu"]],"_sigma",thetaSim[["sigma"]],sep=""),""),"_npart",n_part,"_yr",define.year,".pdf",sep=""),width=12,height=8)
dev.off()
define.year=c(2007)
load(paste("posterior_sero_runs/outputR",define.year[1],"_",loadseed,".RData",sep=""))
lik.tot=rowSums(likelihoodtab)
runsPOST=length(lik.tot[lik.tot!=-Inf])
maxlik=max(lik.tot)
max.pos=(c(1:runsPOST)[lik.tot==maxlik])[1]
max.pos20=round(max.pos/20) # Pick to nearest 20 as historytab is thinned
# Pick max likelihood history and parameters
hist.sample=historytabCollect[((max.pos20-1)*n_part+1):(max.pos20*n_part),1:45]
theta.max=as.data.frame(thetatab)[max.pos,]
theta.max$muShort=8
theta.max
for(pickyr in 1:length(test.yr)){
# Note here that inf_years and strain_years are loads from main_model.R
simulate_data(test.yr[pickyr],historytabPost=hist.sample,
inf_years,
strain_years,
n_part,thetastar=theta.max,p.inf=0.1,linD=F)
load("R_datasets/Simulated_dataPost_1.RData")
par(mfrow=c(2,5)); par(mar = c(5,5,1,1))
# Mask infections after test year
hist.sampleB=hist.sample;  hist.sampleB[,as.numeric(colnames(hist.sample))>test.yr[pickyr]]=0
for(ii0 in 1:n_part){
lenhis=rep(0,length(hist.sample[ii0,]))
plot(inf_years,8*hist.sample[ii0,],type="l",ylim=c(0,9),col='white',xlab="year",ylab="titre")
# Plot true titres
points(min(inf_years)-1+test.list[[ii0]][[pickyr]][4,],test.list[[ii0]][[pickyr]][2,],pch=1,col='red')
# Sample from infection history
for(jj in 1:length(lenhis)){
lines(min(inf_years)-1+c(jj,jj),c(0,9*hist.sampleB[ii0,jj]),col='grey') # Plot estimated infections
}
sim.titre=test.listSim[[ii0]][[1]] # sort sample years
lines(min(inf_years)-1+sort(sim.titre["sample.index",]),sim.titre["titredat",order(sim.titre["sample.index",])],pch=1,col='blue')
points(min(inf_years)-1+test.listSim[[ii0]][[1]][4,],test.listSim[[ii0]][[1]][2,],pch=19,cex=0.5,col='blue')
if(ii0 %% 10==0){
dev.copy(pdf,paste("plot_simulations/sim",ii0,"P_",pickyr,".pdf",sep=""),width=12,height=6)
dev.off()
}
}
}
dim(historytabSim)
pickyr
simulate_data(test.yr[pickyr],historytabPost=hist.sample,
inf_years,
strain_years,
n_part,thetastar=theta.max,p.inf=0.1,linD=F)
dim(hist.sample)
hist.sample
dim(historytabCollect)
max.pos20
max.pos20
max.pos
maxlik
lik.tot
lik.tot==maxlik
c(1:runsPOST)[lik.tot==maxlik]
c(1:runsPOST)
runsPOST
maxlik
lik.tot==maxlik
sum(lik.tot==maxlik)
runsPOST
[lik.tot==maxlik]
lik.tot==maxlik
runsPOST
runsPOST
(c(1:(runsPOST+1))[lik.tot==maxlik])[1]
max.pos=(c(1:(runsPOST+1))[lik.tot==maxlik])[1]
lik.tot[max.pos]
define.year=c(2007)
load(paste("posterior_sero_runs/outputR",define.year[1],"_",loadseed,".RData",sep=""))
lik.tot=rowSums(likelihoodtab)
runsPOST=length(lik.tot[lik.tot!=-Inf])
maxlik=max(lik.tot)
max.pos=(c(1:(runsPOST+1))[lik.tot==maxlik])[1]
max.pos20=round(max.pos/20) # Pick to nearest 20 as historytab is thinned
# Pick max likelihood history and parameters
hist.sample=historytabCollect[((max.pos20-1)*n_part+1):(max.pos20*n_part),1:45]
theta.max=as.data.frame(thetatab)[max.pos,]
theta.max$muShort=8
theta.max
for(pickyr in 1:length(test.yr)){
# Note here that inf_years and strain_years are loads from main_model.R
simulate_data(test.yr[pickyr],historytabPost=hist.sample,
inf_years,
strain_years,
n_part,thetastar=theta.max,p.inf=0.1,linD=F)
load("R_datasets/Simulated_dataPost_1.RData")
par(mfrow=c(2,5)); par(mar = c(5,5,1,1))
# Mask infections after test year
hist.sampleB=hist.sample;  hist.sampleB[,as.numeric(colnames(hist.sample))>test.yr[pickyr]]=0
for(ii0 in 1:n_part){
lenhis=rep(0,length(hist.sample[ii0,]))
plot(inf_years,8*hist.sample[ii0,],type="l",ylim=c(0,9),col='white',xlab="year",ylab="titre")
# Plot true titres
points(min(inf_years)-1+test.list[[ii0]][[pickyr]][4,],test.list[[ii0]][[pickyr]][2,],pch=1,col='red')
# Sample from infection history
for(jj in 1:length(lenhis)){
lines(min(inf_years)-1+c(jj,jj),c(0,9*hist.sampleB[ii0,jj]),col='grey') # Plot estimated infections
}
sim.titre=test.listSim[[ii0]][[1]] # sort sample years
lines(min(inf_years)-1+sort(sim.titre["sample.index",]),sim.titre["titredat",order(sim.titre["sample.index",])],pch=1,col='blue')
points(min(inf_years)-1+test.listSim[[ii0]][[1]][4,],test.listSim[[ii0]][[1]][2,],pch=19,cex=0.5,col='blue')
if(ii0 %% 10==0){
dev.copy(pdf,paste("plot_simulations/sim",ii0,"P_",pickyr,".pdf",sep=""),width=12,height=6)
dev.off()
}
}
}
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Plot simulated data against runs
plot.sim.data<-function(){
# UPDATE THIS BIT
#Compare model fits using posterior infection history (historytabPost) and parameters
simulate_data(define.year,historytabPost=historytab,
inf_years,
strain_years,
n_part=npartM,thetastar=as.data.frame(thetatab)[runsPOST,],p.inf=0.1)
load("R_datasets/Simulated_dataPost.RData")
par(mfrow=c(2,5))
par(mar = c(5,5,1,1))
for(ii0 in 1:n_part){
lenhis=rep(0,length(historytabSim[ii0,]))
plot(8*historytabSim[ii0,],type="l",ylim=c(0,9),col='white')
#for(jj in 1:length(lenhis)){
#  lines(c(jj,jj),c(0,9*historytabSim[ii0,jj]),col='red')
#}
for(jj in 1:length(lenhis)){
lines(c(jj,jj),c(0,9*historytab[ii0,jj]),col='blue')
}
lines(test.list[[ii0]][[1]][4,],test.list[[ii0]][[1]][2,],type="l")
points(test.list[[ii0]][[1]][4,],test.list[[ii0]][[1]][2,],pch=19)
if(ii0 %% 10==0){
dev.copy(pdf,paste("plot_simulations/sim",ii0,"P.pdf",sep=""),width=12,height=6)
dev.off()
}
}
theta.max
theta.max
theta.max
plot(as.data.frame(thetatab)$muShort[runs1:runsPOST])
compile.c() # Compile c code
# << Put for loop here and set loadseed=1 to run multiple MCMC chains
loadseed=1
load("R_datasets/HaNam_data.RData")
#load(paste("R_datasets/Simulated_data_",loadseed,".RData",sep=""))
# Plot simulation data vs history
#source("simulation_plots.R")
# Set initial theta
theta0=c(mu=NA,tau1=NA,tau2=NA,wane=NA,sigma=NA,muShort=NA)
theta0[["mu"]]=3
theta0[["sigma"]]=0.2
theta0[["tau1"]]=0.1
theta0[["tau2"]]=0.1
theta0[["muShort"]]=5
theta0[["wane"]]=0.5
theta=theta0
vp1=0.02 #probability individual infection history resampled - this is adaptive in model
define.year=c(2007,2008,2010,2011)
# browser()
# NEED TO RE INITIALISE DATAFRAME IF REPEAT RUN
run_mcmc(
test.yr=define.year,
test_years,
inf_years,
strain_years,
n_part,
test.list,
theta=theta0,
runs=500000,
varpart_prob=vp1,
hist.true=NULL,
switch1=10, # ratio of infection history resamples to theta resamples
seedi=loadseed,
linD=F)
define.year=c(2007)
load(paste("posterior_sero_runs/outputR",define.year[1],"_",loadseed,".RData",sep=""))
par(mfrow=c(3,3))
par(mar = c(5,5,1,1))
colA=rgb(0.8,0.8,0.8)
# Plot profile likelihood
lik.tot=rowSums(likelihoodtab)
maxlik=max(lik.tot)
runsPOST=length(lik.tot[lik.tot!=-Inf])
runs1=ceiling(0.5*runsPOST)
plot(rowSums(likelihoodtab)[runs1:runsPOST],type="l",ylab="likelihood",ylim=c(maxlik-500,maxlik))
#plot(as.data.frame(thetatab)$mu[runs1:runsPOST],type="l",ylab="mu")
plot(as.data.frame(thetatab)$sigma[runs1:runsPOST],type="l",ylab="sigma")
# Plot histogram of boosting
hist(as.data.frame(thetatab)$mu[runs1:runsPOST],main=NULL,col=colA,xlab="mu",prob=TRUE,xlim=c(0,5))
if(simDat==T){abline(v=thetaSim[["mu"]],col="red")}
hist(as.data.frame(thetatab)$sigma[runs1:runsPOST],main=NULL,col=colA,xlab="sigma",xlim=c(0,0.5))
if(simDat==T){abline(v=thetaSim[["sigma"]],col="red")}
hist(as.data.frame(thetatab)$tau1[runs1:runsPOST],main=NULL,col=colA,xlab="tau1",prob=TRUE,xlim=c(0,0.7))
if(simDat==T){abline(v=thetaSim[["tau1"]],col="red")}
hist(as.data.frame(thetatab)$tau2[runs1:runsPOST],main=NULL,col=colA,xlab="tau2",prob=TRUE,xlim=c(0,0.7))
if(simDat==T){abline(v=thetaSim[["tau2"]],col="red")}
hist(as.data.frame(thetatab)$wane[runs1:runsPOST],main=NULL,col=colA,xlab="wane",prob=TRUE,xlim=c(0,2))
if(simDat==T){abline(v=thetaSim[["wane"]],col="red")}
hist(as.data.frame(thetatab)$muShort[runs1:runsPOST],main=NULL,col=colA,xlab="mu_Short",prob=TRUE,xlim=c(0,8))
if(simDat==T){abline(v=thetaSim[["muShort"]],col="red")}
hist.sample=length(historytabCollect[,1])/n_part
ind.infN=rowSums(historytabCollect[round(0.2*hist.sample*n_part):(hist.sample*n_part),])
hist(ind.infN,breaks=seq(-0.5,max(ind.infN)+0.5,1),col=colA,xlab="infections",prob=TRUE,main=paste("mean/med=",signif(mean(ind.infN),2),"/",median(ind.infN),sep=""))
dev.copy(pdf,paste("plot_simulations/posterior",ifelse(simDat==T,paste("mu",thetaSim[["mu"]],"_sigma",thetaSim[["sigma"]],sep=""),""),"_npart",n_part,"_yr",define.year,".pdf",sep=""),width=12,height=8)
dev.off()
plot(as.data.frame(thetatab)$wane)
define.year=c(2007)
load(paste("posterior_sero_runs/outputR",define.year[1],"_",loadseed,".RData",sep=""))
par(mfrow=c(3,3))
par(mar = c(5,5,1,1))
colA=rgb(0.8,0.8,0.8)
# Plot profile likelihood
lik.tot=rowSums(likelihoodtab)
maxlik=max(lik.tot)
runsPOST=length(lik.tot[lik.tot!=-Inf])
runs1=ceiling(0.5*runsPOST)
plot(rowSums(likelihoodtab)[runs1:runsPOST],type="l",ylab="likelihood",ylim=c(maxlik-500,maxlik))
#plot(as.data.frame(thetatab)$mu[runs1:runsPOST],type="l",ylab="mu")
plot(as.data.frame(thetatab)$sigma[runs1:runsPOST],type="l",ylab="sigma")
# Plot histogram of boosting
hist(as.data.frame(thetatab)$mu[runs1:runsPOST],main=NULL,col=colA,xlab="mu",prob=TRUE,xlim=c(0,5))
if(simDat==T){abline(v=thetaSim[["mu"]],col="red")}
hist(as.data.frame(thetatab)$sigma[runs1:runsPOST],main=NULL,col=colA,xlab="sigma",xlim=c(0,0.5))
if(simDat==T){abline(v=thetaSim[["sigma"]],col="red")}
hist(as.data.frame(thetatab)$tau1[runs1:runsPOST],main=NULL,col=colA,xlab="tau1",prob=TRUE,xlim=c(0,0.7))
if(simDat==T){abline(v=thetaSim[["tau1"]],col="red")}
hist(as.data.frame(thetatab)$tau2[runs1:runsPOST],main=NULL,col=colA,xlab="tau2",prob=TRUE,xlim=c(0,0.7))
if(simDat==T){abline(v=thetaSim[["tau2"]],col="red")}
hist(as.data.frame(thetatab)$wane[runs1:runsPOST],main=NULL,col=colA,xlab="wane",prob=TRUE,xlim=c(0,3))
if(simDat==T){abline(v=thetaSim[["wane"]],col="red")}
hist(as.data.frame(thetatab)$muShort[runs1:runsPOST],main=NULL,col=colA,xlab="mu_Short",prob=TRUE,xlim=c(0,8))
if(simDat==T){abline(v=thetaSim[["muShort"]],col="red")}
hist.sample=length(historytabCollect[,1])/n_part
ind.infN=rowSums(historytabCollect[round(0.2*hist.sample*n_part):(hist.sample*n_part),])
hist(ind.infN,breaks=seq(-0.5,max(ind.infN)+0.5,1),col=colA,xlab="infections",prob=TRUE,main=paste("mean/med=",signif(mean(ind.infN),2),"/",median(ind.infN),sep=""))
dev.copy(pdf,paste("plot_simulations/posterior",ifelse(simDat==T,paste("mu",thetaSim[["mu"]],"_sigma",thetaSim[["sigma"]],sep=""),""),"_npart",n_part,"_yr",define.year,".pdf",sep=""),width=12,height=8)
dev.off()
define.year=c(2007)
load(paste("posterior_sero_runs/outputR",define.year[1],"_",loadseed,".RData",sep=""))
lik.tot=rowSums(likelihoodtab)
runsPOST=length(lik.tot[lik.tot!=-Inf])
maxlik=max(lik.tot)
max.pos=(c(1:(runsPOST+1))[lik.tot==maxlik])[1]
max.pos20=round(max.pos/20) # Pick to nearest 20 as historytab is thinned
# Pick max likelihood history and parameters
hist.sample=historytabCollect[((max.pos20-1)*n_part+1):(max.pos20*n_part),1:45]
theta.max=as.data.frame(thetatab)[max.pos,]
theta.max
for(pickyr in 1:length(test.yr)){
# Note here that inf_years and strain_years are loads from main_model.R
simulate_data(test.yr[pickyr],historytabPost=hist.sample,
inf_years,
strain_years,
n_part,thetastar=theta.max,p.inf=0.1,linD=F)
load("R_datasets/Simulated_dataPost_1.RData")
par(mfrow=c(2,5)); par(mar = c(5,5,1,1))
# Mask infections after test year
hist.sampleB=hist.sample;  hist.sampleB[,as.numeric(colnames(hist.sample))>test.yr[pickyr]]=0
for(ii0 in 1:n_part){
lenhis=rep(0,length(hist.sample[ii0,]))
plot(inf_years,8*hist.sample[ii0,],type="l",ylim=c(0,9),col='white',xlab="year",ylab="titre")
# Plot true titres
points(min(inf_years)-1+test.list[[ii0]][[pickyr]][4,],test.list[[ii0]][[pickyr]][2,],pch=1,col='red')
# Sample from infection history
for(jj in 1:length(lenhis)){
lines(min(inf_years)-1+c(jj,jj),c(0,9*hist.sampleB[ii0,jj]),col='grey') # Plot estimated infections
}
sim.titre=test.listSim[[ii0]][[1]] # sort sample years
lines(min(inf_years)-1+sort(sim.titre["sample.index",]),sim.titre["titredat",order(sim.titre["sample.index",])],pch=1,col='blue')
points(min(inf_years)-1+test.listSim[[ii0]][[1]][4,],test.listSim[[ii0]][[1]][2,],pch=19,cex=0.5,col='blue')
if(ii0 %% 10==0){
dev.copy(pdf,paste("plot_simulations/sim",ii0,"P_",pickyr,".pdf",sep=""),width=12,height=6)
dev.off()
}
}
}
# << Put for loop here and set loadseed=1 to run multiple MCMC chains
loadseed=1
load("R_datasets/HaNam_data.RData")
#load(paste("R_datasets/Simulated_data_",loadseed,".RData",sep=""))
# Plot simulation data vs history
#source("simulation_plots.R")
# Set initial theta
theta0=c(mu=NA,tau1=NA,tau2=NA,wane=NA,sigma=NA,muShort=NA)
theta0[["mu"]]=3
theta0[["sigma"]]=0.2
theta0[["tau1"]]=0.1
theta0[["tau2"]]=0.1
theta0[["muShort"]]=5
theta0[["wane"]]=0.5
theta=theta0
vp1=0.02 #probability individual infection history resampled - this is adaptive in model
define.year=c(2007,2008,2010,2011)
# browser()
# NEED TO RE INITIALISE DATAFRAME IF REPEAT RUN
run_mcmc(
test.yr=define.year,
test_years,
inf_years,
strain_years,
n_part,
test.list,
theta=theta0,
runs=1000000,
varpart_prob=vp1,
hist.true=NULL,
switch1=10, # ratio of infection history resamples to theta resamples
seedi=loadseed,
linD=F)
define.year=c(2007)
load(paste("posterior_sero_runs/outputR",define.year[1],"_",loadseed,".RData",sep=""))
par(mfrow=c(3,3))
par(mar = c(5,5,1,1))
colA=rgb(0.8,0.8,0.8)
# Plot profile likelihood
lik.tot=rowSums(likelihoodtab)
maxlik=max(lik.tot)
runsPOST=length(lik.tot[lik.tot!=-Inf])
runs1=ceiling(0.5*runsPOST)
plot(rowSums(likelihoodtab)[runs1:runsPOST],type="l",ylab="likelihood",ylim=c(maxlik-500,maxlik))
#plot(as.data.frame(thetatab)$mu[runs1:runsPOST],type="l",ylab="mu")
plot(as.data.frame(thetatab)$sigma[runs1:runsPOST],type="l",ylab="sigma")
# Plot histogram of boosting
hist(as.data.frame(thetatab)$mu[runs1:runsPOST],main=NULL,col=colA,xlab="mu",prob=TRUE,xlim=c(0,5))
if(simDat==T){abline(v=thetaSim[["mu"]],col="red")}
hist(as.data.frame(thetatab)$sigma[runs1:runsPOST],main=NULL,col=colA,xlab="sigma",xlim=c(0,0.5))
if(simDat==T){abline(v=thetaSim[["sigma"]],col="red")}
hist(as.data.frame(thetatab)$tau1[runs1:runsPOST],main=NULL,col=colA,xlab="tau1",prob=TRUE,xlim=c(0,0.7))
if(simDat==T){abline(v=thetaSim[["tau1"]],col="red")}
hist(as.data.frame(thetatab)$tau2[runs1:runsPOST],main=NULL,col=colA,xlab="tau2",prob=TRUE,xlim=c(0,0.7))
if(simDat==T){abline(v=thetaSim[["tau2"]],col="red")}
hist(as.data.frame(thetatab)$wane[runs1:runsPOST],main=NULL,col=colA,xlab="wane",prob=TRUE,xlim=c(0,3))
if(simDat==T){abline(v=thetaSim[["wane"]],col="red")}
hist(as.data.frame(thetatab)$muShort[runs1:runsPOST],main=NULL,col=colA,xlab="mu_Short",prob=TRUE,xlim=c(0,8))
if(simDat==T){abline(v=thetaSim[["muShort"]],col="red")}
hist.sample=length(historytabCollect[,1])/n_part
ind.infN=rowSums(historytabCollect[round(0.2*hist.sample*n_part):(hist.sample*n_part),])
hist(ind.infN,breaks=seq(-0.5,max(ind.infN)+0.5,1),col=colA,xlab="infections",prob=TRUE,main=paste("mean/med=",signif(mean(ind.infN),2),"/",median(ind.infN),sep=""))
dev.copy(pdf,paste("plot_simulations/posterior",ifelse(simDat==T,paste("mu",thetaSim[["mu"]],"_sigma",thetaSim[["sigma"]],sep=""),""),"_npart",n_part,"_yr",define.year,".pdf",sep=""),width=12,height=8)
dev.off()
define.year=c(2007)
load(paste("posterior_sero_runs/outputR",define.year[1],"_",loadseed,".RData",sep=""))
lik.tot=rowSums(likelihoodtab)
runsPOST=length(lik.tot[lik.tot!=-Inf])
maxlik=max(lik.tot)
max.pos=(c(1:(runsPOST+1))[lik.tot==maxlik])[1]
max.pos20=round(max.pos/20) # Pick to nearest 20 as historytab is thinned
# Pick max likelihood history and parameters
hist.sample=historytabCollect[((max.pos20-1)*n_part+1):(max.pos20*n_part),1:45]
theta.max=as.data.frame(thetatab)[max.pos,]
theta.max
for(pickyr in 1:length(test.yr)){
# Note here that inf_years and strain_years are loads from main_model.R
simulate_data(test.yr[pickyr],historytabPost=hist.sample,
inf_years,
strain_years,
n_part,thetastar=theta.max,p.inf=0.1,linD=F)
load("R_datasets/Simulated_dataPost_1.RData")
par(mfrow=c(2,5)); par(mar = c(5,5,1,1))
# Mask infections after test year
hist.sampleB=hist.sample;  hist.sampleB[,as.numeric(colnames(hist.sample))>test.yr[pickyr]]=0
for(ii0 in 1:n_part){
lenhis=rep(0,length(hist.sample[ii0,]))
plot(inf_years,8*hist.sample[ii0,],type="l",ylim=c(0,9),col='white',xlab="year",ylab="titre")
# Plot true titres
points(min(inf_years)-1+test.list[[ii0]][[pickyr]][4,],test.list[[ii0]][[pickyr]][2,],pch=1,col='red')
# Sample from infection history
for(jj in 1:length(lenhis)){
lines(min(inf_years)-1+c(jj,jj),c(0,9*hist.sampleB[ii0,jj]),col='grey') # Plot estimated infections
}
sim.titre=test.listSim[[ii0]][[1]] # sort sample years
lines(min(inf_years)-1+sort(sim.titre["sample.index",]),sim.titre["titredat",order(sim.titre["sample.index",])],pch=1,col='blue')
points(min(inf_years)-1+test.listSim[[ii0]][[1]][4,],test.listSim[[ii0]][[1]][2,],pch=19,cex=0.5,col='blue')
if(ii0 %% 10==0){
dev.copy(pdf,paste("plot_simulations/sim",ii0,"P_",pickyr,".pdf",sep=""),width=12,height=6)
dev.off()
}
}
}
install.packages("shiny")
library(shiny)
