straincoord1 = ag.coord[sY <= (pick_years[1] + 1968 ),c("AG_y","AG_x")]
straincoord2 = ag.coord[sY > (pick_years[1] + 1968 ),c("AG_y","AG_x")]
p_year = pick_years[1]
}else{
straincoord1 = ag.coord[sY <= (pick_years[2] + 1968 ),c("AG_y","AG_x")]
straincoord2 = ag.coord[sY > (pick_years[2] + 1968 ),c("AG_y","AG_x")]
p_year = c(pick_years[1],pick_years[2])
}
if(kk==1){pm_plot = pred_matrixS1}
if(kk==2){pm_plot = pred_matrixL1}
if(kk==3){pm_plot = pred_matrixS2}
if(kk==4){pm_plot = pred_matrixL2}
# Plot strains
points3D(straincoord1[,"AG_y"],straincoord1[,"AG_x"],rep(maxLoc,length(straincoord1$AG_y)),zlim=c(0,5),ticktype = "detailed",xlim=xRange,ylim=yRange,xlab="",ylab="",zlab="titre",col = "black", cex = sizeA,pch=19,phi=viewPoint, theta = thetaPick,expand = ExpX)
points3D(straincoord2[,"AG_y"],straincoord2[,"AG_x"],rep(maxLoc,length(straincoord2$AG_y)),  cex = sizeA, add=T,pch=19,col=rgb(grY,grY,grY,tranP))
# Plot summary
lines3D(x=xx,y=yy,rep(maxLoc,length(xx)),col="black",lty=2, add=T)
# Plot infection
scatter3D(x=c(xx[p_year]),y=c(yy[p_year]),z=rep(5,length(p_year)),type="h",lty=2,cex = sizeA, add=T, col="red", lwd=1,pch=19)
# Plot perspective
persp3D(z = t(pm_plot),x = y.range, y = x.range,clim=c(0,5),ticktype = "detailed",add=T,alpha=alphaA)
title(main=LETTERS[kk],adj=0)
}
dev.copy(pdf,paste("plot_simulations/simulate_new_response/map_space2.pdf",sep=""),width=8,height=6)
dev.off()
#dev.copy(png,paste("plot_simulations/simulate_new_response/map_space2e.png",sep=""),units="cm",width=25,height=15,res=150)
#dev.off()
}
# Plot H3N2 Vietnam data
plot_h3_reports <- function(){
par(mfrow=c(3,1))
par(mgp=c(1.8,0.6,0))
par(mar = c(3,3,1,1))
test.yr=c(2007:2012)
collect.list = data.frame(rbind(c(2006,"2005-12-31"),c(2007,"2007-12-31"),c(2008,"2008-12-31"),
c(2009,"2009-06-30"),c(2010,"2010-04-30"), c(2011,"2011-07-31"),c(2012,"2012-05-31") ),stringsAsFactors = F) # Dat of isolation
names(collect.list)=c("year","sample")
collect.list$year=as.numeric(collect.list$year)
collect.list$sample=as.Date(collect.list$sample)
flu.isolates=data.frame(read.csv("datasets/Vietnam_H3.csv",stringsAsFactors = F)) # Data from http://www.who.int/influenza/gisrs_laboratory/flunet/en/
flu.isolates=flu.isolates[flu.isolates$Start_date >= as.Date(collect.list[2,2]), ]
flu.isolates$Start_date=as.Date(flu.isolates$Start_date)
flu.isolates$A_H3[is.na(flu.isolates$A_H3)]=0 # Set blank spaces to zero
# Count samples within region
isolatetab=NULL
for(ii in 2:length(test.yr) ){ # iterate from 2 as don't know initial period of risk
isolatetab=c(isolatetab,
sum(flu.isolates[flu.isolates$Start_date > collect.list[ii,"sample"] & flu.isolates$Start_date < collect.list[ii+1,"sample"] ,"A_H3"])
)
}
xLims=c(as.Date("2007-12-30"),as.Date("2012-06-01"))
plot(flu.isolates$Start_date,flu.isolates$total_flu_positive,type="l",xlab="year",ylab="Total isolates detected",ylim=c(0,100),xlim=xLims);title(LETTERS[1],adj=0)
plot(flu.isolates$Start_date,flu.isolates$A_H3,type="l",xlab="year",ylab="H3 isolates detected",ylim=c(0,100),xlim=xLims);title(LETTERS[2],adj=0)
for(ii in 1:length(collect.list$year)){
lines(c(collect.list[ii,"sample"],collect.list[ii,"sample"]),c(0,100),col="red")
}
# Plot from 3 as want to line up end points
plot(collect.list$sample[3:7], isolatetab,ylim=c(0,800),pch=19,col="red",xlab="year",ylab="H3 isolates detected",xlim=xLims);title(LETTERS[3],adj=0)
dev.copy(pdf,paste("plot_simulations/H3Data.pdf",sep=""),width=6,height=6,useDingbats=F)
dev.off()
}
# Plot H3N2 China data
plot_h3_china_reports <- function(){
par(mfrow=c(2,1))
par(mgp=c(1.8,0.6,0))
par(mar = c(4,4,1,1))
test.yr=c(2004:2009)
#collect.list = data.frame(rbind(c(2006,"2005-12-31"),c(2007,"2007-12-31"),c(2008,"2008-12-31"),
#                                c(2009,"2009-06-30"),c(2010,"2010-04-30"), c(2011,"2011-07-31"),c(2012,"2012-05-31") ),stringsAsFactors = F) # Dat of isolation
collect.list = data.frame(rbind(c(2004,"2004-12-31"),c(2005,"2005-12-31"),c(2006,"2006-12-31"),c(2007,"2007-12-31"),c(2008,"2008-12-31"),
c(2009,"2009-12-31"),c(2010,"2010-12-31"), c(2011,"2011-12-31"),c(2012,"2012-12-31") ),stringsAsFactors = F) # Dat of isolation
names(collect.list)=c("year","sample")
collect.list$year=as.numeric(collect.list$year)
collect.list$sample=as.Date(collect.list$sample)
flu.isolates=data.frame(read.csv("datasets/China_H3.csv",stringsAsFactors = F)) # Data from http://www.who.int/influenza/gisrs_laboratory/flunet/en/
flu.isolates$Start_date=as.Date(flu.isolates$Start_date)
flu.isolates$A_H3[is.na(flu.isolates$A_H3)]=0 # Set blank spaces to zero
# Count samples within region
isolatetab=NULL
for(ii in 2:length(test.yr) ){
isolatetab=c(isolatetab,
sum(flu.isolates[flu.isolates$Start_date > collect.list[ii,"sample"] & flu.isolates$Start_date < collect.list[ii+1,"sample"] ,"A_H3"])
)
}
xLims=c(as.Date("2004-11-01"),as.Date("2009-06-01"))
# plot(flu.isolates$Start_date,flu.isolates$total_flu_positive,type="l",xlab="Date",ylab="Total isolates detected",ylim=c(0,1000),xlim=xLims);title(LETTERS[1],adj=0)
plot(flu.isolates$Start_date,flu.isolates$A_H3,type="l",xlab="Date",ylab="H3 isolates detected",ylim=c(0,2000),xlim=xLims);title(LETTERS[2],adj=0)
for(ii in 1:length(collect.list$year)){
lines(c(collect.list[ii,"sample"],collect.list[ii,"sample"]),c(0,10000),col="red")
}
plot(collect.list$sample[3:7], isolatetab,ylim=c(0,20000),pch=19,col="red",xlab="year",ylab="H3 isolates detected",xlim=xLims);title(LETTERS[3],adj=0)
dev.copy(pdf,paste("plot_simulations/H3Data.pdf",sep=""),width=5,height=7,useDingbats=F)
dev.off()
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Run multi-chain diagnostics
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
plot.multi.true.vs.estimated<-function(simDat=T,flu.type="H3HN",loadpick=c(1:4),burnCut=0.25,year_test=c(2007:2012),plotmap=F,fr.lim=F,linearFn=T,runsPOST=NULL){
# simDat=T;year_test=c(2007:2012);plotmap=F;fr.lim=T;flu.type="H3HN"; loadpick=c(1:10); burnCut=0.25; loadseed=1; linearFn=T; runsPOST=NULL
col.list=list(col1=rgb(0.9,0.6,0),col2=rgb(0.2,0,0.8),col3=rgb(0.1,0.6,0.2),col4=rgb(1,0.4,1),col5=rgb(0.8,0,0.2))
# Orange, blue, green, pink
par(mfrow=c(1,1),mar = c(3,3,1,1),mgp=c(1.8,0.6,0))
plot(0.1,0.1,pch=19,col="white",xlim=c(0,0.3),ylim=c(0,0.3),xlab="true attack rate",ylab="estimated attack rate", xaxs="i", yaxs="i")
lines(c(0,1),c(0,1),col='grey')
vals.blank=NULL
for(loadseed in loadpick){
if(simDat==F){loadseedA=paste(loadseed,"_",flu.type,sep="")}else{loadseedA=paste("SIM_",loadseed,sep="")}
load(paste("posterior_sero_runs/outputR_f",paste(year_test,"_",collapse="",sep=""),"s",loadseedA,"_lin",linearFn,".RData",sep=""))
hist.sample=length(historytabCollect[,1])/n_part # need this sample value because table is stacked
ind.infN=rowSums(historytabCollect[((round(0.2*hist.sample)*n_part)+1):(hist.sample*n_part),])
yob.data=cbind(rep(1,n_part),rep(1,n_part)) # Import age distribution
n.alive=n_part+0*inf_years
attack=colSums(historytabCollect[round(0.2*hist.sample*n_part):(hist.sample*n_part),])/(length(ind.infN)*(n.alive/length(yob.data[,1]))) #scale by proportion alive
attackCI=NULL
for(jj in 1:length(inf_years)){
htest <- binom.test(round(n.alive*attack)[jj], n.alive[jj], p = 1,conf.level=0.95)
meanA=attack[jj]
conf1=htest$conf.int[1]
conf2=htest$conf.int[2]
attackCI=rbind(attackCI,c(meanA,conf1,conf2))
}
attackCI=data.frame(attackCI)
names(attackCI)=c("mean","CI1","CI2")
load(paste("R_datasets/Simulated_data_",loadseedA,".RData",sep=""))
attack.yr=colSums(historytabSim)/n_part
#attack.yr = read.csv(paste("datasets/sim_attackS",loadseed,".csv",sep=""))[,2] # TRUE VALUES
# - - - - - - - - - - - - - - - - - -
# Calculate and plot four fold rise in data
sconverttab = NULL
for(kk in 2:(length(test.yr)-1) ){ # Only valid for 2008-2011 (no test strains for 2012)
pyear2=0
pyear4=0
nyear=0
for(ii in 1:n_part){
t.part1=test.listSim[[ii]][[kk-1]]
t.part2=test.listSim[[ii]][[kk]]
# Check to match test strains
matchd1d2 = t.part2[3,]==test.yr[kk]
if(length(matchd1d2) > 0){
diffT = t.part2[2,matchd1d2] - t.part1[2,matchd1d2] # Compare titres
nyear = nyear +1
if(median(diffT) >= 2){pyear4 = pyear4 + 1}
if(median(diffT) >= 1){pyear2 = pyear2 + 1}
}
}
sconverttab=rbind(sconverttab, c(pyear4/nyear,pyear2/nyear))
}
pick_r=match(test_years[2:(length(test.yr)-1)],inf_years)
for(kk in pick_r){ # Iterate across test years
points(attack.yr[kk],attackCI$mean[kk],pch=19,col=rgb(1,0,0),cex=0.5)
lines(c(attack.yr[kk],attack.yr[kk]),c(attackCI$CI1[kk],attackCI$CI2[kk]),col=rgb(1,0,0))
}
points(attack.yr[pick_r], sconverttab[,2],pch=1,cex=1.2,col=rgb(0,0,0))
points(attack.yr[pick_r], sconverttab[,1],pch=19,cex=1.2,col=rgb(0,0,0))
vals.blank = rbind(vals.blank, cbind(attack.yr[pick_r],attackCI$mean[pick_r],sconverttab) )
}
dev.copy(pdf,paste("plot_simulations/True_vs_rise",ifelse(simDat==T,"SIM",""),"_np",n_part,"_yr",paste(year_test,"_",collapse="",sep=""),loadseed,".pdf",sep=""),width=5,height=4)
dev.off()
vals.blank0 = vals.blank %>% data.frame()
names(vals.blank0)=c("true","est","rise4","rise2")
# Plot residuals
breaksN=seq(-0.31,0.31,0.02)
hist(vals.blank0$est-vals.blank0$true,breaks = breaksN,col=rgb(1,0,0,0.5),border="grey")
hist(vals.blank0$rise4-vals.blank0$true, breaks = breaksN,add=T,col=rgb(0,0,0,0.2),border=NULL)
hist(vals.blank0$rise2-vals.blank0$true, breaks = breaksN,add=T,col=rgb(0,1,0,0.2),border=NULL)
par(mar=c(3,3,1,1),mgp=c(2,0.7,0))
plot(density(vals.blank0$est-vals.blank0$true),col="white",frame=T,xaxs="i",yaxs="i",ylab="density",xlab="simulation residual",main="",xlim=c(-0.2,0.2),ylim=c(0,100))
lines(c(0,0),c(0,100),col="grey")
lines(density(vals.blank0$est-vals.blank0$true,adjust=20),col="red",lwd=2)
lines(density(vals.blank0$rise4-vals.blank0$true,adjust=1),col="black",lty=1,lwd=2)
lines(density(vals.blank0$rise2-vals.blank0$true,adjust=1),col="black",lty=2,lwd=2)
dev.copy(pdf,paste("plot_simulations/TrueDens",ifelse(simDat==T,"SIM",""),"_np",n_part,"_yr",paste(year_test,"_",collapse="",sep=""),loadseed,".pdf",sep=""), width=3,height=2)
dev.off()
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Histogram of sample strains
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
plot_hist_strains <- function(){
par(mfrow=c(1,1),mar=c(3,3,1,1),mgp=c(1.5,0.5,0))
load("R_datasets/HaNam_data.RData")
hist(strain_years,breaks = seq(1967.5,2011.5,1),col=rgb(0.7,0.7,0.7),
xaxs="i",yaxs="i",border=NULL,main=NULL,xlab="year",ylab="frequency")
dev.copy(pdf,paste("plot_simulations/Sample_years.pdf",sep=""), width=4,height=2)
dev.off()
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Convert map ID tags to strain years
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
strain_years_convert <- function(){
ag.coord=read.csv("datasets/antigenic_coords.csv", as.is=T,head=T)
# Convert antigenic coords into cluster centroids
strain_years=as.numeric(sapply(ag.coord$viruses,function(x){
a1=max(which(strsplit(x, "")[[1]]=="/"))
lstr=nchar(x)
yr1=substr(x, a1+1, lstr)
if(nchar(yr1)>4){yr1=substr(yr1, 1, 4)}
year=yr1
if(nchar(yr1)==2 & as.numeric(yr1)>15){year=paste("19",yr1,sep="")}
if(nchar(yr1)==2 & as.numeric(yr1)<15){year=paste("20",yr1,sep="")}
year
}
))
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Convert map ID tags to strain years
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
compare_titre_changes <- function(){
postFS = read.csv("plot_simulations/param_post1_H3FS.csv")$x
postHN = read.csv("plot_simulations/param_post1_H3HN.csv")$x
pick = min(length(postFS),length(postHN))
print(c.text(postHN[1:pick]-postFS[1:pick]))
}
# Plot posteriors for H3 FluScape Neut data
plot.posteriors(year_test=c(2009),loadseed=1,flu.type="H3FS",fr.lim=T,plotmap = F,plot.corr = F,linearFn=T)
# Plot posteriors for H3 FluScape HI data
plot.posteriors(year_test=c(2009),loadseed=2,flu.type="H3FS_HI",fr.lim=T,plotmap = F,plot.corr = F,linearFn=T)
# Plot convergence for MCMC chains for H3 HI FluScape
plot.multi.chain.posteriors(burnCut=0.25,flu.type="H3FS_HI",year_test=c(2009),loadpick=c(2:3),fr.lim=T,linearFn=T)
1.42*exp(-0.128)
1.02*exp(-0.095)
1.42*exp(-0.128*2)
1.02*exp(-0.095*@)
1.02*exp(-0.095*2)
1.42*exp(-0.128*20)
1.02*exp(-0.095*20)
setwd("~/fluscape/trunk")
source("source/R/PilotFigures.r")
source("source/R/PilotMultiLevelAnalysis.r")
library(lattice)
library(pROC)
#code to get data
pilot.data<-load.data()
# create new dataset without missing data (151 complete cases; 123 incomplete removed)
cleanpilot.data <- pilot.data[!is.na(pilot.data$HI.H3N2.1968),]
#dim(pilot.data)
#names(pilot.data)
#length(pilot.data$Full.ID)
#head(pilot.data)
#table(pilot.data$Age)
pilot.data
cleanpilot.data
cleanpilot.data
serotypes="H3N2"
hi.cols <- getTiterColumns("HI", serotypes, years)
nt.cols <- getTiterColumns("NT", serotypes, years)
hi <- as.numeric(as.matrix(data[,hi.cols]))
nt <- as.numeric(as.matrix(data[,nt.cols]))
years=c("1968","1975", "1979","1989","1995",
"2002","2003","2005","2008","2009","2009.PDM")
hi.cols <- getTiterColumns("HI", serotypes, years)
nt.cols <- getTiterColumns("NT", serotypes, years)
hi <- as.numeric(as.matrix(data[,hi.cols]))
nt <- as.numeric(as.matrix(data[,nt.cols]))
hi.cols
cleanpilot.data[,hi.cols]
head(cleanpilot.data[,hi.cols])
head(cleanpilot.data[,nt.cols])
head(cleanpilot.data[,c(,hi.cols,nt.cols)])
write.csv(cleanpilot.data[,c(hi.cols,nt.cols)],"../../titres.csv")
data0 <- read.csv("datasets/Fluscape_SupplmentalDataS1.csv",stringsAsFactors=FALSE)
# Define all the quads
data1 <- data.frame(data0)
aa <- unique(data1$neut.against)
strain0 <- sapply(unique(data1$neut.against),function(x){x})
n_part <- 151
data1$titers=round(sapply(data1$titers,function(x){log2(exp(as.numeric(x))/10)+1}),6)  # Make titre log2 -- NOTE 0 to 8 scale
# Use last 3 test years only to keep gaps uniform...
test_years <- c(2009)
test.n <- length(test_years)
inf_years <- c(1968:2009)
strain_years <- c(1968,1975,1979,1989,1995,2002,2003,2005,2008)
#inf_years <- strain_years
nstrains <- 1 #length(strain_years)
test.list <- list()
for(ii in 1:n_part){
subjectn=ii; i.list=list()
dataP <- data1[data1$id==ii,]
#   FORMAT
#   test.year    2010 2010 2010 2010 2010 2010
#   titredat        1    2    4    3    6    3
#   strain_years 1990 1994 1998 2002 2006 2010 # Year of isolate
#   sample.index    1    5    9   13   17   21 # Numerical index of strain isolate (start with first possible year of infection)
#   age
for(jj in 1:test.n){
testyr <- test_years[jj]
dataI <- dataP$titers
strain_year <- strain_years
i.list[[jj]]=rbind(test.year=rep(testyr,nstrains),
titredat=dataI,
strain_year,
strain_years-min(strain_years)+1,
age=dataP[1,"age"] # record age
)
}
test.list[[ii]]=i.list
}
test.list[[1]]
data1
data0 <- read.csv("datasets/Fluscape_SupplmentalDataS1.csv",stringsAsFactors=FALSE)
# Define all the quads
data1 <- data.frame(data0)
aa <- unique(data1$neut.against)
strain0 <- sapply(unique(data1$neut.against),function(x){x})
n_part <- 151
data1$titers=round(sapply(data1$titers,function(x){log2(exp(as.numeric(x))/10)+1}),6)  # Make titre log2 -- NOTE 0 to 8 scale
setwd("~/Documents/flu-model/sero_model/")
# setwd("~/Dropbox/git/flu-model/sero_model")
data0 <- read.csv("datasets/Fluscape_SupplmentalDataS1.csv",stringsAsFactors=FALSE)
# Define all the quads
data1 <- data.frame(data0)
aa <- unique(data1$neut.against)
strain0 <- sapply(unique(data1$neut.against),function(x){x})
n_part <- 151
data1$titers=round(sapply(data1$titers,function(x){log2(exp(as.numeric(x))/10)+1}),6)  # Make titre log2 -- NOTE 0 to 8 scale
data1
data0 <- read.csv("datasets/Fluscape_SupplmentalDataS1.csv",stringsAsFactors=FALSE)
# Define all the quads
data1 <- data.frame(data0)
aa <- unique(data1$neut.against)
strain0 <- sapply(unique(data1$neut.against),function(x){x})
n_part <- 151
round(sapply(data1$titers,function(x){log2(exp(as.numeric(x))/10)+1}),6)  # Make titre log2 -- NOTE 0 to 8 scale
round(sapply(data1$titers,function(x){exp(as.numeric(x))/10}),6)  # Make titre log2 -- NOTE 0 to 8 scale
round(sapply(data1$titers,function(x){exp(as.numeric(x))/5}),6)  # Make titre log2 -- NOTE 0 to 8 scale
round
sapply(data1$titers,function(x){exp(as.numeric(x))/10})  # Make titre log2 -- NOTE 0 to 8 scale
sapply(data1$titers,function(x){exp(as.numeric(x))/5})  # Make titre log2 -- NOTE 0 to 8 scale
sapply(data1$titers,function(x){log2(exp(as.numeric(x))/10)+1})  # Make titre log2 -- NOTE 0 to 8 scale
round(sapply(data1$titers,function(x){log2(exp(as.numeric(x))/10)+1}),6)  # Make titre log2 -- NOTE 0 to 8 scale
2^6
10*2^6
10*2^5
log2(320/10)
log2(320/10)+1
data0 <- read.csv("datasets/Fluscape_HI_data.csv",stringsAsFactors=FALSE)
# Define all the quads
data1 <- data.frame(data0[,-1])
strain0 <- names(data0[-1])
n_part <- 151
data1=round(apply(data1,2,function(x){log2(x/10)+1}),6)  # Make titre log2 -- NOTE 0 to 8 scale
data1[data1==-Inf]=0 # remove NA
data0
head(data0)
data1
head(data1)
log2(80/10)+1
80*2
80*3
80*4
data0 <- read.csv("datasets/Fluscape_HI_NT_titres.csv",stringsAsFactors=FALSE)
data0
head(data0)
data0 <- read.csv("datasets/Fluscape_HI_NT_titres.csv",stringsAsFactors=FALSE)
data0
log2(data0/10)+1
data1 <- log2(data0/10)+1
data1[data1==-Inf]=0 # remove NA
data1
nt.cols
data0 <- read.csv("datasets/Fluscape_HI_NT_titres.csv",stringsAsFactors=FALSE)
data1 <- log2(data0/10)+1
data1[data1==-Inf]=0 # remove NA
data1 = data.frame(data1)
data1[,nt.cols]
data2 = data1[,nt.cols]-data1[,hi.cols]
dim(data2) = NULL
data2
hist(data2)
data2 = data1[,nt.cols]-data1[,hi.cols]
data2 = melt(data2)
data2
data2
data2$value
hist(data2$value)
mean(data2$value)
load("R_datasets/FluScapeH3_HI_data.RData")
test.list
test.list[[1]]
pilot.data$Age[151]
pilot.data$Age
cleanpilot.data$Age
load("R_datasets/FluScapeH3_data.RData")
test.list
test.list[[1]]
test.list2=test.list
load("R_datasets/FluScapeH3_HI_data.RData")
test.list[[1]]
# Plot posteriors for H3 FluScape Neut data
plot.posteriors(year_test=c(2009),loadseed=1,flu.type="H3FS",fr.lim=T,plotmap = F,plot.corr = T,linearFn=T)
# Plot posteriors for H3 FluScape HI data
plot.posteriors(year_test=c(2009),loadseed=2,flu.type="H3FS_HI",fr.lim=T,plotmap = F,plot.corr = T,linearFn=T)
source("sero_functions.R")
source("posterior_analysis_flu.R")
# Plot posteriors for H3 FluScape Neut data
plot.posteriors(year_test=c(2009),loadseed=1,flu.type="H3FS",fr.lim=T,plotmap = F,plot.corr = T,linearFn=T)
# Plot posteriors for H3 FluScape HI data
plot.posteriors(year_test=c(2009),loadseed=2,flu.type="H3FS_HI",fr.lim=T,plotmap = F,plot.corr = T,linearFn=T)
source("sero_functions.R")
source("posterior_analysis_flu.R")
# Plot posteriors for H3 FluScape Neut data
plot.posteriors(year_test=c(2009),loadseed=1,flu.type="H3FS",fr.lim=T,plotmap = F,plot.corr = T,linearFn=T)
# Plot posteriors for H3 FluScape HI data
plot.posteriors(year_test=c(2009),loadseed=2,flu.type="H3FS_HI",fr.lim=T,plotmap = F,plot.corr = T,linearFn=T)
source("sero_functions.R")
source("posterior_analysis_flu.R")
# Plot posteriors for H3 FluScape Neut data
plot.posteriors(year_test=c(2009),loadseed=1,flu.type="H3FS",fr.lim=T,plotmap = F,plot.corr = T,linearFn=T)
# Plot posteriors for H3 FluScape HI data
plot.posteriors(year_test=c(2009),loadseed=2,flu.type="H3FS_HI",fr.lim=T,plotmap = F,plot.corr = T,linearFn=T)
yob.data=data.frame(read.csv("datasets/HaNam_YOB.csv",header=FALSE)
)
yob.dataHN=yob.data
yob.data=data.frame(read.csv("datasets/FluScape_YOB.csv",header=FALSE))
yob.dataHN
hist(yob.dataHN)
hist(as.numeric(yob.dataHN))
yob.dataHN
yob.dataHN$V1
hist(yob.dataHN$V1)
hist(yob.data,add=T)
hist(yob.data$V1,add=T)
read.csv("datasets/HaNam_YOB.csv",header=FALSE)
mean(read.csv("datasets/HaNam_YOB.csv",header=FALSE))
read.csv("datasets/HaNam_YOB.csv",header=FALSE)
yob.dataHN = read.csv("datasets/HaNam_YOB.csv",header=FALSE)
yob.dataHN
yob.dataHN$V1
yob.dataHN = read.csv("datasets/HaNam_YOB.csv",header=FALSE)$V1 # Import age distribution HN
yob.dataFS = read.csv("datasets/FluScape_YOB.csv",header=FALSE)$V1 # Import age distribution FS
yob.dataHN
yob.dataHN
yob.dataFS
hist(yob.dataHN,prob=T)
yob.dataHN = read.csv("datasets/HaNam_YOB.csv",header=FALSE)$V1 # Import age distribution HN
yob.dataFS = read.csv("datasets/FluScape_YOB.csv",header=FALSE)$V1 # Import age distribution FS
hist(yob.dataHN,prob=T)
hist(yob.dataFS,add=T,col=rgb(1,0,0,0.5))
yob.dataHN = read.csv("datasets/HaNam_YOB.csv",header=FALSE)$V1 # Import age distribution HN
yob.dataFS = read.csv("datasets/FluScape_YOB.csv",header=FALSE)$V1 # Import age distribution FS
hist(yob.dataHN,prob=T)
hist(yob.dataFS,add=T,col=rgb(1,0,0,0.5),prob=T)
hist(yob.dataHN,prob=T)
hist(yob.dataFS,add=T,col=rgb(1,0,0,0.2),prob=T)
yob.dataHN = read.csv("datasets/HaNam_YOB.csv",header=FALSE)$V1 # Import age distribution HN
yob.dataFS = read.csv("datasets/FluScape_YOB.csv",header=FALSE)$V1 # Import age distribution FS
hist(yob.dataHN,prob=T,col=rgb(0,0,1,0.3))
hist(yob.dataFS,add=T,col=rgb(1,0,0,0.3),prob=T)
yob.dataHN = read.csv("datasets/HaNam_YOB.csv",header=FALSE)$V1 # Import age distribution HN
yob.dataFS = read.csv("datasets/FluScape_YOB.csv",header=FALSE)$V1 # Import age distribution FS
hist(yob.dataHN,prob=T,col=rgb(0,0,1,0.3),xlab="year of birth",main="Blue = Vietnam, Red = China")
hist(yob.dataFS,add=T,col=rgb(1,0,0,0.3),prob=T)
yob.dataHN = read.csv("datasets/HaNam_YOB.csv",header=FALSE)$V1 # Import age distribution HN
yob.dataFS = read.csv("datasets/FluScape_YOB.csv",header=FALSE)$V1 # Import age distribution FS
hist(yob.dataHN,prob=T,col=rgb(0,0,1,0.3),xlab="year of birth",main="Blue = Vietnam, Red = China",xaxs="i")
hist(yob.dataFS,add=T,col=rgb(1,0,0,0.3),prob=T)
yob.dataHN = read.csv("datasets/HaNam_YOB.csv",header=FALSE)$V1 # Import age distribution HN
yob.dataFS = read.csv("datasets/FluScape_YOB.csv",header=FALSE)$V1 # Import age distribution FS
hist(yob.dataHN,prob=T,col=rgb(0,0,1,0.3),xlab="year of birth",main="Blue = Vietnam, Red = China",yaxs="i",xaxs="i")
hist(yob.dataFS,add=T,col=rgb(1,0,0,0.3),prob=T)
yob.dataHN = read.csv("datasets/HaNam_YOB.csv",header=FALSE)$V1 # Import age distribution HN
yob.dataFS = read.csv("datasets/FluScape_YOB.csv",header=FALSE)$V1 # Import age distribution FS
hist(yob.dataHN,prob=T,col=rgb(0,0,1,0.3),xlab="year of birth",main="Blue = Vietnam, Red = China",yaxs="i",xaxs="i",xlim=c(1920,2010))
hist(yob.dataFS,add=T,col=rgb(1,0,0,0.3),prob=T)
yob.dataHN = read.csv("datasets/HaNam_YOB.csv",header=FALSE)$V1 # Import age distribution HN
yob.dataFS = read.csv("datasets/FluScape_YOB.csv",header=FALSE)$V1 # Import age distribution FS
hist(yob.dataHN,prob=T,col=rgb(0,0,1,0.3),xlab="year of birth",main="Blue = Vietnam, Red = China",yaxs="i",xaxs="i",breaks=seq(1920,10,2010))
hist(yob.dataFS,add=T,col=rgb(1,0,0,0.3),prob=T)
yob.dataHN = read.csv("datasets/HaNam_YOB.csv",header=FALSE)$V1 # Import age distribution HN
yob.dataFS = read.csv("datasets/FluScape_YOB.csv",header=FALSE)$V1 # Import age distribution FS
hist(yob.dataHN,prob=T,col=rgb(0,0,1,0.3),xlab="year of birth",main="Blue = Vietnam, Red = China",yaxs="i",xaxs="i",breaks=seq(1920,2010,10))
hist(yob.dataFS,add=T,col=rgb(1,0,0,0.3),prob=T)
yob.dataHN = read.csv("datasets/HaNam_YOB.csv",header=FALSE)$V1 # Import age distribution HN
yob.dataFS = read.csv("datasets/FluScape_YOB.csv",header=FALSE)$V1 # Import age distribution FS
hist(yob.dataHN,prob=T,col=rgb(0,0,1,0.3),xlab="year of birth",main="Blue = Vietnam, Red = China",yaxs="i",xaxs="i",breaks=seq(1920,2015,10))
hist(yob.dataFS,add=T,col=rgb(1,0,0,0.3),prob=T)
yob.dataHN = read.csv("datasets/HaNam_YOB.csv",header=FALSE)$V1 # Import age distribution HN
yob.dataFS = read.csv("datasets/FluScape_YOB.csv",header=FALSE)$V1 # Import age distribution FS
hist(yob.dataHN,prob=T,col=rgb(0,0,1,0.3),xlab="year of birth",main="Blue = Vietnam, Red = China",yaxs="i",xaxs="i",breaks=seq(1920,2020,10))
hist(yob.dataFS,add=T,col=rgb(1,0,0,0.3),prob=T)
yob.dataHN = read.csv("datasets/HaNam_YOB.csv",header=FALSE)$V1 # Import age distribution HN
yob.dataFS = read.csv("datasets/FluScape_YOB.csv",header=FALSE)$V1 # Import age distribution FS
hist(yob.dataHN,prob=T,col=rgb(0,0,1,0.3),xlab="year of birth",main="Blue = Vietnam, Red = China",yaxs="i",xaxs="i",breaks=seq(1920,2010,10))
hist(yob.dataFS,add=T,col=rgb(1,0,0,0.3),prob=T)
yob.dataHN = read.csv("datasets/HaNam_YOB.csv",header=FALSE)$V1 # Import age distribution HN
yob.dataFS = read.csv("datasets/FluScape_YOB.csv",header=FALSE)$V1 # Import age distribution FS
hist(yob.dataHN,prob=T,col=rgb(0,0,1,0.3),xlab="year of birth",main="Blue = Vietnam, Red = China",yaxs="i",breaks=seq(1920,2010,10))
hist(yob.dataFS,add=T,col=rgb(1,0,0,0.3),prob=T)
yob.dataHN = read.csv("datasets/HaNam_YOB.csv",header=FALSE)$V1 # Import age distribution HN
yob.dataFS = read.csv("datasets/FluScape_YOB.csv",header=FALSE)$V1 # Import age distribution FS
hist(yob.dataHN,prob=T,col=rgb(0,0,1,0.3),xlab="year of birth",main="Blue = Vietnam, Red = China",yaxs="i",breaks=seq(1920,2010,10))
hist(yob.dataFS,add=T,col=rgb(1,0,0,0.3),prob=T)
dev.copy(pdf,paste("plot_simulations/Age_histogram.pdf",sep=""), width=4,height=2)
dev.off()
yob.dataHN = read.csv("datasets/HaNam_YOB.csv",header=FALSE)$V1 # Import age distribution HN
yob.dataFS = read.csv("datasets/FluScape_YOB.csv",header=FALSE)$V1 # Import age distribution FS
hist(yob.dataHN,prob=T,col=rgb(0,0,1,0.3),xlab="year of birth",main="Blue = Vietnam, Red = China",yaxs="i",breaks=seq(1920,2010,10))
hist(yob.dataFS,add=T,col=rgb(1,0,0,0.3),prob=T)
dev.copy(pdf,paste("plot_simulations/Age_histogram.pdf",sep=""), width=5,height=4)
dev.off()
install_github("pablobarbera/scholarnetwork")
library("devtools")
install_github("pablobarbera/scholarnetwork")
extractNetwork
d <- extractNetwork(id="eIqfmHYAAAAJ", n=500)
str(d)
install_github("pablobarbera/scholarnetwork")
library(scholarnetwork)
install.packages("scholar")
library(scholarnetwork)
d <- extractNetwork(id="eIqfmHYAAAAJ", n=500)
str(d)
library(scholar)
